{"remainingRequest":"/Users/lyx/WebstormProjects/grtc-explorer/node_modules/thread-loader/dist/cjs.js!/Users/lyx/WebstormProjects/grtc-explorer/node_modules/babel-loader/lib/index.js!/Users/lyx/WebstormProjects/grtc-explorer/src/utils/web3/totalLockedValue.js","dependencies":[{"path":"/Users/lyx/WebstormProjects/grtc-explorer/src/utils/web3/totalLockedValue.js","mtime":1600777857000},{"path":"/Users/lyx/WebstormProjects/grtc-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1599786627641},{"path":"/Users/lyx/WebstormProjects/grtc-explorer/node_modules/thread-loader/dist/cjs.js","mtime":1599786627944},{"path":"/Users/lyx/WebstormProjects/grtc-explorer/node_modules/babel-loader/lib/index.js","mtime":1599578972213}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/lyx/WebstormProjects/grtc-explorer/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport chainOpt from \"./operations\";\nimport { offChainCall, callByTrxTransactionBuilder } from \"@/utils/web3/common\";\nimport wallet from \"./wallet\";\nimport { uniAddrs, poolAddr } from \"@/utils/web3/constant\";\nimport Decimal from \"decimal.js\";\nimport abis from \"@/utils/web3/contractABI/abis\";\nvar usdtPair = \"TQn9Y2khEsLJW1ChVWFMSMeRDow5KcbLSE\";\nvar usdtContractAddr = \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\";\nvar usdtContract = null;\nvar poolTLV = [];\nvar userTLV = \"0\";\nvar loopQuerying = false;\nvar totalTLV = \"0\";\n\nfunction getLPPrice(_x, _x2) {\n  return _getLPPrice.apply(this, arguments);\n}\n\nfunction _getLPPrice() {\n  _getLPPrice = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(lp, trxPrice) {\n    var trxLockedIn, totalValue, totalSupply;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return tronWeb.trx.getBalance(lp);\n\n          case 2:\n            trxLockedIn = _context2.sent;\n            _context2.next = 5;\n            return new Decimal(trxLockedIn).mul(2).mul(trxPrice);\n\n          case 5:\n            totalValue = _context2.sent;\n            _context2.next = 8;\n            return callByTrxTransactionBuilder(lp, \"totalSupply()\", []);\n\n          case 8:\n            totalSupply = _context2.sent;\n            totalSupply = new Decimal(\"0x\" + totalSupply[0]);\n            return _context2.abrupt(\"return\", totalValue.div(totalSupply));\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getLPPrice.apply(this, arguments);\n}\n\nfunction getPoolStaked(_x3, _x4) {\n  return _getPoolStaked.apply(this, arguments);\n}\n\nfunction _getPoolStaked() {\n  _getPoolStaked = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(pid, token) {\n    var poolInfo;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            poolInfo = window.allPoolInfo[pid];\n\n            if (poolInfo) {\n              _context3.next = 8;\n              break;\n            }\n\n            _context3.next = 4;\n            return chainOpt.poolInfo(pid).catch(function (e) {\n              return false;\n            });\n\n          case 4:\n            poolInfo = _context3.sent;\n\n            if (poolInfo) {\n              _context3.next = 7;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", \"0\");\n\n          case 7:\n            window.allPoolInfo[pid] = poolInfo;\n\n          case 8:\n            return _context3.abrupt(\"return\", new Decimal(poolInfo.pool.staked));\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getPoolStaked.apply(this, arguments);\n}\n\nfunction getLPValue(_x5, _x6, _x7) {\n  return _getLPValue.apply(this, arguments);\n}\n\nfunction _getLPValue() {\n  _getLPValue = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(token, pid, trxPrice) {\n    var perLPValue, poolStaked;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return getLPPrice(token.pair, trxPrice);\n\n          case 2:\n            perLPValue = _context4.sent;\n            _context4.next = 5;\n            return getPoolStaked(pid, token);\n\n          case 5:\n            poolStaked = _context4.sent;\n            return _context4.abrupt(\"return\", perLPValue.mul(poolStaked));\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getLPValue.apply(this, arguments);\n}\n\nfunction getTokenValue(_x8, _x9, _x10) {\n  return _getTokenValue.apply(this, arguments);\n}\n\nfunction _getTokenValue() {\n  _getTokenValue = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(token, pid, trxPrice) {\n    var oneToken, tokenTrxPrice, poolStaked;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            oneToken = new Decimal(1).mul(token.decimals);\n            _context5.next = 3;\n            return callByTrxTransactionBuilder(token.pair, \"getTokenToTrxInputPrice(uint256)\", [{\n              type: \"uint256\",\n              value: oneToken.toString()\n            }]);\n\n          case 3:\n            tokenTrxPrice = _context5.sent;\n            tokenTrxPrice = new Decimal(\"0x\" + tokenTrxPrice[0]).div(1e6);\n            _context5.next = 7;\n            return getPoolStaked(pid, token);\n\n          case 7:\n            poolStaked = _context5.sent;\n            return _context5.abrupt(\"return\", tokenTrxPrice.mul(trxPrice).mul(poolStaked));\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getTokenValue.apply(this, arguments);\n}\n\nfunction getTRXValue(_x11, _x12, _x13) {\n  return _getTRXValue.apply(this, arguments);\n}\n\nfunction _getTRXValue() {\n  _getTRXValue = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(token, pid, trxPrice) {\n    var poolStaked;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return getPoolStaked(pid, token);\n\n          case 2:\n            poolStaked = _context6.sent;\n            return _context6.abrupt(\"return\", poolStaked.mul(trxPrice));\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _getTRXValue.apply(this, arguments);\n}\n\nfunction getUSDTValue(_x14, _x15) {\n  return _getUSDTValue.apply(this, arguments);\n}\n\nfunction _getUSDTValue() {\n  _getUSDTValue = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(token, pid) {\n    var poolStaked;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return getPoolStaked(pid, token);\n\n          case 2:\n            poolStaked = _context7.sent;\n            return _context7.abrupt(\"return\", new Decimal(poolStaked));\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _getUSDTValue.apply(this, arguments);\n}\n\nfunction getTRXPrice() {\n  return _getTRXPrice.apply(this, arguments);\n}\n\nfunction _getTRXPrice() {\n  _getTRXPrice = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n    var owner, usdt, trx;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            if (tronWeb) {\n              _context8.next = 2;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", new Decimal(0));\n\n          case 2:\n            if (usdtContract === null) {\n              usdtContract = tronWeb.contract(abis.erc20, usdtContractAddr);\n            }\n\n            owner = wallet.getAccount();\n            _context8.next = 6;\n            return offChainCall(usdtContract, owner, \"balanceOf\", [usdtPair]);\n\n          case 6:\n            usdt = _context8.sent;\n            _context8.next = 9;\n            return tronWeb.trx.getBalance(usdtPair);\n\n          case 9:\n            trx = _context8.sent;\n            return _context8.abrupt(\"return\", new Decimal(usdt.balance.toString()).div(trx));\n\n          case 11:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _getTRXPrice.apply(this, arguments);\n}\n\nvar lockedTokenList = {\n  //usdt-trx\n  \"TQn9Y2khEsLJW1ChVWFMSMeRDow5KcbLSE\": {\n    name: \"TEFI\",\n    decimals: 1e6,\n    pair: \"TQn9Y2khEsLJW1ChVWFMSMeRDow5KcbLSE\",\n    pairContract: null,\n    valueGetter: getLPValue\n  },\n  //usdt\n  \"TRX\": {\n    name: \"TRX\",\n    decimals: 1e6,\n    pair: null,\n    pairContract: null,\n    valueGetter: getTRXValue\n  },\n  //usdt\n  \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\": {\n    name: \"USDT\",\n    decimals: 1e6,\n    pair: null,\n    pairContract: null,\n    valueGetter: getUSDTValue\n  } // //tefi\n  // \"TSS89kdrcekgmErvaFv73raFiQePwnun8Z\": {\n  //   name: \"TEFI\",\n  //   decimals: 1e18,\n  //   pair: \"TVbTu1dVwwcJ4zVNwKdU98aSWkxHWD94jb\",\n  //   pairContract: null,\n  //   valueGetter: getTokenValue,\n  // },\n  //\n  // //usdt\n  // \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\": {\n  //   name: \"USDT\",\n  //   decimals: 1e6,\n  //   pair: null,\n  //   pairContract: null,\n  //   valueGetter: getUSDTValue,\n  // },\n  //\n  // //tefi-trx\n  // \"TVbTu1dVwwcJ4zVNwKdU98aSWkxHWD94jb\": {\n  //   name: \"TEFI-TRX\",\n  //   decimals: 1e6,\n  //   pair: \"TVbTu1dVwwcJ4zVNwKdU98aSWkxHWD94jb\",\n  //   pairContract: null,\n  //   valueGetter: getLPValue,\n  // },\n  //\n  // //slm\n  // \"TEbKj6dFUSs6Q6dW5F9R4DZwTWKV9EV2BR\": {\n  //   name: \"SLM\",\n  //   decimals: 1e18,\n  //   pair: \"TPmoRZzt1m1W2fYZt49g3tzza4hL6Uz3fc\",\n  //   pairContract: null,\n  //   valueGetter: getTokenValue,\n  // },\n  //\n  // //pearl\n  // \"TGbu32VEGpS4kDmjrmn5ZZJgUyHQiaweoq\": {\n  //   name: \"PEARL\",\n  //   decimals: 1e18,\n  //   pair: \"TAAMpPWJvMRnbkNuDNPTFyWcDUrvorqaaZ\",\n  //   pairContract: null,\n  //   valueGetter: getTokenValue,\n  // },\n\n};\n\nfunction loopQueryingTLV() {\n  return _loopQueryingTLV.apply(this, arguments);\n}\n\nfunction _loopQueryingTLV() {\n  _loopQueryingTLV = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n    var totalLocked, trxPrice, totalUserLocked, i, u, token, lockedValue, poolInfo, userStakePercent, userLocked;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            if (!loopQuerying) {\n              _context9.next = 2;\n              break;\n            }\n\n            return _context9.abrupt(\"return\");\n\n          case 2:\n            loopQuerying = true;\n\n            if (wallet.isConnected()) {\n              _context9.next = 6;\n              break;\n            }\n\n            loopQuerying = false;\n            return _context9.abrupt(\"return\");\n\n          case 6:\n            totalLocked = new Decimal(0);\n            _context9.next = 9;\n            return getTRXPrice();\n\n          case 9:\n            trxPrice = _context9.sent;\n            totalUserLocked = new Decimal(0);\n            i = 0;\n\n          case 12:\n            if (!(i < uniAddrs.length)) {\n              _context9.next = 37;\n              break;\n            }\n\n            u = uniAddrs[i];\n\n            if (!lockedTokenList[u]) {\n              _context9.next = 34;\n              break;\n            }\n\n            if (lockedTokenList[u].pairContract === null && lockedTokenList[u].pair) {\n              lockedTokenList[u].pairContract = tronWeb.contract(abis.swap, lockedTokenList[u].pair);\n            }\n\n            token = lockedTokenList[u];\n            lockedValue = 0;\n            _context9.prev = 18;\n            _context9.next = 21;\n            return token.valueGetter(token, i, trxPrice);\n\n          case 21:\n            _context9.t0 = _context9.sent;\n\n            if (_context9.t0) {\n              _context9.next = 24;\n              break;\n            }\n\n            _context9.t0 = 0;\n\n          case 24:\n            lockedValue = _context9.t0;\n            _context9.next = 30;\n            break;\n\n          case 27:\n            _context9.prev = 27;\n            _context9.t1 = _context9[\"catch\"](18);\n            lockedValue = 0;\n\n          case 30:\n            poolTLV[i] = lockedValue;\n            totalLocked = totalLocked.add(lockedValue);\n            poolInfo = window.allPoolInfo[i];\n\n            if (poolInfo) {\n              userStakePercent = new Decimal(poolInfo.user.stakeIn).div(poolInfo.pool.staked);\n\n              if (!isNaN(userStakePercent)) {\n                userLocked = new Decimal(lockedValue).mul(userStakePercent);\n                totalUserLocked = totalUserLocked.add(userLocked);\n              }\n            }\n\n          case 34:\n            i++;\n            _context9.next = 12;\n            break;\n\n          case 37:\n            loopQuerying = false;\n            totalTLV = totalLocked.toDP(6, Decimal.ROUND_CEIL).toString();\n            userTLV = totalUserLocked.toDP(6, Decimal.ROUND_CEIL).toString();\n\n          case 40:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[18, 27]]);\n  }));\n  return _loopQueryingTLV.apply(this, arguments);\n}\n\nsetTimeout( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return loopQueryingTLV().catch(function (e) {});\n\n          case 2:\n            setInterval(loopQueryingTLV, 5000);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x16) {\n    return _ref.apply(this, arguments);\n  };\n}(), 1000);\n\nfunction getTLV() {\n  return totalTLV;\n}\n\nfunction getUserTLV() {\n  return userTLV;\n}\n\nexport { getTLV, getUserTLV };",{"version":3,"sources":["/Users/lyx/WebstormProjects/grtc-explorer/src/utils/web3/totalLockedValue.js"],"names":["chainOpt","offChainCall","callByTrxTransactionBuilder","wallet","uniAddrs","poolAddr","Decimal","abis","usdtPair","usdtContractAddr","usdtContract","poolTLV","userTLV","loopQuerying","totalTLV","getLPPrice","lp","trxPrice","tronWeb","trx","getBalance","trxLockedIn","mul","totalValue","totalSupply","div","getPoolStaked","pid","token","poolInfo","window","allPoolInfo","catch","e","pool","staked","getLPValue","pair","perLPValue","poolStaked","getTokenValue","oneToken","decimals","type","value","toString","tokenTrxPrice","getTRXValue","getUSDTValue","getTRXPrice","contract","erc20","owner","getAccount","usdt","balance","lockedTokenList","name","pairContract","valueGetter","loopQueryingTLV","isConnected","totalLocked","totalUserLocked","i","length","u","swap","lockedValue","add","userStakePercent","user","stakeIn","isNaN","userLocked","toDP","ROUND_CEIL","setTimeout","_","setInterval","getTLV","getUserTLV"],"mappings":"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","sourcesContent":["import chainOpt from \"./operations\";\nimport {offChainCall, callByTrxTransactionBuilder} from \"@/utils/web3/common\";\nimport wallet from \"./wallet\";\nimport {uniAddrs, poolAddr} from \"@/utils/web3/constant\";\nimport Decimal from \"decimal.js\";\nimport abis from \"@/utils/web3/contractABI/abis\";\n\nlet usdtPair = \"TQn9Y2khEsLJW1ChVWFMSMeRDow5KcbLSE\"\nlet usdtContractAddr = \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\"\nlet usdtContract = null\n\nlet poolTLV = []\nlet userTLV = \"0\"\n\nlet loopQuerying = false\nlet totalTLV = \"0\"\n\nasync function getLPPrice(lp, trxPrice) {\n  let trxLockedIn = await tronWeb.trx.getBalance(lp);\n  let totalValue = await new Decimal(trxLockedIn).mul(2).mul(trxPrice)\n\n  let totalSupply = await callByTrxTransactionBuilder(lp, \"totalSupply()\",[])\n  totalSupply = new Decimal(\"0x\" + totalSupply[0])\n\n  return totalValue.div(totalSupply)\n}\n\nasync function getPoolStaked(pid, token) {\n  let poolInfo = window.allPoolInfo[pid]\n\n  if(!poolInfo) {\n    poolInfo = await chainOpt.poolInfo(pid)\n      .catch(e=>{\n        return false\n      })\n\n    if(!poolInfo) {\n      return \"0\"\n    }\n\n    window.allPoolInfo[pid] = poolInfo\n  }\n\n  return  new Decimal(poolInfo.pool.staked)\n}\n\nasync function getLPValue(token, pid, trxPrice) {\n  let perLPValue = await getLPPrice(token.pair, trxPrice)\n  let poolStaked = await getPoolStaked(pid, token)\n\n  return perLPValue.mul(poolStaked)\n}\n\nasync function getTokenValue(token, pid, trxPrice) {\n  let oneToken = new Decimal(1).mul(token.decimals)\n  let tokenTrxPrice = await callByTrxTransactionBuilder(\n    token.pair,\n    \"getTokenToTrxInputPrice(uint256)\",\n    [{type:\"uint256\", value: oneToken.toString()}])\n\n  tokenTrxPrice = new Decimal(\"0x\" + tokenTrxPrice[0]).div(1e6)\n  let poolStaked = await getPoolStaked(pid, token)\n\n  return tokenTrxPrice.mul(trxPrice).mul(poolStaked)\n}\n\nasync function getTRXValue(token, pid, trxPrice) {\n  let poolStaked = await getPoolStaked(pid, token)\n\n  return poolStaked.mul(trxPrice)\n}\n\nasync function getUSDTValue(token, pid) {\n  let poolStaked = await getPoolStaked(pid, token)\n\n  return new Decimal(poolStaked)\n}\n\nasync function getTRXPrice() {\n  if(!tronWeb) {\n    return new Decimal(0)\n  }\n\n  if(usdtContract === null) {\n    usdtContract = tronWeb.contract(abis.erc20, usdtContractAddr)\n  }\n\n  let owner = wallet.getAccount()\n  let usdt = await offChainCall(usdtContract, owner, \"balanceOf\", [usdtPair])\n  let trx = await tronWeb.trx.getBalance(usdtPair);\n\n  return new Decimal(usdt.balance.toString()).div(trx)\n}\n\nlet lockedTokenList = {\n  //usdt-trx\n  \"TQn9Y2khEsLJW1ChVWFMSMeRDow5KcbLSE\": {\n    name: \"TEFI\",\n    decimals: 1e6,\n    pair: \"TQn9Y2khEsLJW1ChVWFMSMeRDow5KcbLSE\",\n    pairContract: null,\n    valueGetter: getLPValue,\n  },\n\n  //usdt\n  \"TRX\": {\n    name: \"TRX\",\n    decimals: 1e6,\n    pair: null,\n    pairContract: null,\n    valueGetter: getTRXValue,\n  },\n\n  //usdt\n  \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\": {\n    name: \"USDT\",\n    decimals: 1e6,\n    pair: null,\n    pairContract: null,\n    valueGetter: getUSDTValue,\n  },\n\n  // //tefi\n  // \"TSS89kdrcekgmErvaFv73raFiQePwnun8Z\": {\n  //   name: \"TEFI\",\n  //   decimals: 1e18,\n  //   pair: \"TVbTu1dVwwcJ4zVNwKdU98aSWkxHWD94jb\",\n  //   pairContract: null,\n  //   valueGetter: getTokenValue,\n  // },\n  //\n  // //usdt\n  // \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\": {\n  //   name: \"USDT\",\n  //   decimals: 1e6,\n  //   pair: null,\n  //   pairContract: null,\n  //   valueGetter: getUSDTValue,\n  // },\n  //\n  // //tefi-trx\n  // \"TVbTu1dVwwcJ4zVNwKdU98aSWkxHWD94jb\": {\n  //   name: \"TEFI-TRX\",\n  //   decimals: 1e6,\n  //   pair: \"TVbTu1dVwwcJ4zVNwKdU98aSWkxHWD94jb\",\n  //   pairContract: null,\n  //   valueGetter: getLPValue,\n  // },\n  //\n  // //slm\n  // \"TEbKj6dFUSs6Q6dW5F9R4DZwTWKV9EV2BR\": {\n  //   name: \"SLM\",\n  //   decimals: 1e18,\n  //   pair: \"TPmoRZzt1m1W2fYZt49g3tzza4hL6Uz3fc\",\n  //   pairContract: null,\n  //   valueGetter: getTokenValue,\n  // },\n  //\n  // //pearl\n  // \"TGbu32VEGpS4kDmjrmn5ZZJgUyHQiaweoq\": {\n  //   name: \"PEARL\",\n  //   decimals: 1e18,\n  //   pair: \"TAAMpPWJvMRnbkNuDNPTFyWcDUrvorqaaZ\",\n  //   pairContract: null,\n  //   valueGetter: getTokenValue,\n  // },\n}\n\nasync function loopQueryingTLV() {\n  if(loopQuerying) {\n    return\n  }\n  loopQuerying = true\n\n  if(!wallet.isConnected()) {\n    loopQuerying = false\n    return\n  }\n\n  let totalLocked = new Decimal(0)\n  let trxPrice = await getTRXPrice()\n  let totalUserLocked =  new Decimal(0)\n\n  for(let i=0; i<uniAddrs.length; i++) {\n    let  u = uniAddrs[i]\n\n    if(lockedTokenList[u]) {\n      if(lockedTokenList[u].pairContract === null && lockedTokenList[u].pair) {\n        lockedTokenList[u].pairContract = tronWeb.contract(abis.swap, lockedTokenList[u].pair)\n      }\n      let token = lockedTokenList[u]\n      let lockedValue = 0\n      try {\n          lockedValue = await token.valueGetter(token, i, trxPrice) || 0\n      } catch (e) {\n        lockedValue = 0\n      }\n\n\n      poolTLV[i] = lockedValue\n      totalLocked = totalLocked.add(lockedValue)\n\n      let poolInfo = window.allPoolInfo[i]\n      if(poolInfo) {\n        let userStakePercent = new Decimal(poolInfo.user.stakeIn).div(poolInfo.pool.staked)\n        if(!isNaN(userStakePercent)) {\n          let userLocked = new Decimal(lockedValue).mul(userStakePercent)\n          totalUserLocked = totalUserLocked.add(userLocked)\n        }\n      }\n    }\n  }\n\n  loopQuerying = false\n\n  totalTLV = totalLocked.toDP(6, Decimal.ROUND_CEIL).toString()\n  userTLV = totalUserLocked.toDP(6, Decimal.ROUND_CEIL).toString()\n}\n\nsetTimeout(async _=>{\n  await loopQueryingTLV()\n    .catch(e=>{})\n  setInterval(loopQueryingTLV, 5000);\n}, 1000)\n\nfunction getTLV() {\n  return totalTLV\n}\n\nfunction getUserTLV() {\n  return userTLV\n}\n\nexport {\n  getTLV,\n  getUserTLV,\n}\n"]}]}