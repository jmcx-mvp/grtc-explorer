{"remainingRequest":"/Users/lyx/WebstormProjects/ladder-fomo3d/node_modules/babel-loader/lib/index.js!/Users/lyx/WebstormProjects/ladder-fomo3d/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyx/WebstormProjects/ladder-fomo3d/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyx/WebstormProjects/ladder-fomo3d/src/views/list/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyx/WebstormProjects/ladder-fomo3d/src/views/list/index.vue","mtime":1600778154000},{"path":"/Users/lyx/WebstormProjects/ladder-fomo3d/node_modules/cache-loader/dist/cjs.js","mtime":1599786627641},{"path":"/Users/lyx/WebstormProjects/ladder-fomo3d/node_modules/babel-loader/lib/index.js","mtime":1599578972213},{"path":"/Users/lyx/WebstormProjects/ladder-fomo3d/node_modules/cache-loader/dist/cjs.js","mtime":1599786627641},{"path":"/Users/lyx/WebstormProjects/ladder-fomo3d/node_modules/vue-loader/lib/index.js","mtime":1599786628079}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/lyx/WebstormProjects/ladder-fomo3d/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Loading from 'vue-loading-overlay';\nimport 'vue-loading-overlay/dist/vue-loading.css';\nimport chainOpt from \"@/utils/web3/chainOperation\";\nimport { rewardPerBlock, LPTokenToPoolID } from \"@/utils/web3/constant\";\nimport Decimal from \"decimal.js\";\nvar opt = chainOpt.opt;\nvar defaultChainInfo = {\n  supply: 0,\n  userStaked: 0,\n  poolStaked: 0,\n  rewardPerHour: 0,\n  rewardPerDay: 0,\n  rewardPerWeek: 0\n};\nexport default {\n  name: \"List\",\n  components: {\n    Loading: Loading\n  },\n  data: function data() {\n    return {\n      queryingFlag: [],\n      allBalance: null,\n      poolInfo: [],\n      loading: false,\n      allTotal: 0,\n      depositTotal: 0,\n      yourTotal: 0,\n      rewards: 0,\n      hourRewards: 0,\n      dayRewards: 0,\n      weekRewards: 0,\n      products: [{\n        img: \"/static/icon/TEFI.png\",\n        name: \"TEFI, Double!\",\n        txt: \"TEFI\",\n        tx: \"TEFI\",\n        lp: false,\n        apy: \"3000\",\n        chainInfo: defaultChainInfo,\n        totalSupply: \"9600\",\n        stat: false,\n        dateTime: \"2020-09-23 20:00:00\",\n        double: false,\n        LPToken: \"TSS89kdrcekgmErvaFv73raFiQePwnun8Z\",\n        link: \"https://justswap.io/#/home?tokenAddress=TSS89kdrcekgmErvaFv73raFiQePwnun8Z&type=swap\"\n      }, {\n        img: \"/static/icon/USDT.png\",\n        name: \"USDT to SSO\",\n        txt: \"USDT\",\n        tx: \"USDT\",\n        lp: false,\n        apy: \"3000\",\n        chainInfo: defaultChainInfo,\n        totalSupply: \"1600\",\n        stat: false,\n        dateTime: \"2020-09-23 20:00:00\",\n        double: false,\n        LPToken: \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\",\n        link: \"https://justswap.io/#/home?tokenAddress=TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t&type=swap\"\n      }, {\n        img: \"/static/icon/TEFI-TRX.png\",\n        name: \"TEFI TRX JLP\",\n        txt: \"TEFI-TRX\",\n        tx: \"TEFI-TRX\",\n        lp: true,\n        apy: \"3000\",\n        chainInfo: defaultChainInfo,\n        totalSupply: \"4400\",\n        stat: false,\n        dateTime: \"2020-09-23 20:00:00\",\n        double: false,\n        LPToken: \"TVbTu1dVwwcJ4zVNwKdU98aSWkxHWD94jb\",\n        link: \"https://justswap.io/#/home?tokenAddress=TSS89kdrcekgmErvaFv73raFiQePwnun8Z&type=add\"\n      }, {\n        img: \"/static/icon/SSO-TRX.png\",\n        name: \"Sirius Oracle!\",\n        txt: \"SSO-TRX JLP\",\n        tx: \"SSO-TRX\",\n        lp: true,\n        apy: \"3000\",\n        chainInfo: defaultChainInfo,\n        totalSupply: \"6000\",\n        stat: false,\n        dateTime: \"2020-09-23 20:00:00\",\n        double: false,\n        LPToken: \"\",\n        link: \"https://justswap.io/#/home\"\n      }, {\n        img: \"/static/icon/SLM.png\",\n        name: \"Salmon!\",\n        txt: \"SLM\",\n        tx: \"SLM\",\n        lp: false,\n        apy: \"3000\",\n        chainInfo: defaultChainInfo,\n        totalSupply: \"800\",\n        stat: false,\n        dateTime: \"2020-09-23 20:00:00\",\n        double: false,\n        LPToken: \"TEbKj6dFUSs6Q6dW5F9R4DZwTWKV9EV2BR\",\n        link: \"https://justswap.io/#/home?tokenAddress=TEbKj6dFUSs6Q6dW5F9R4DZwTWKV9EV2BR&type=swap\"\n      }, {\n        img: \"/static/icon/PEARL.png\",\n        name: \"Pearl!\",\n        txt: \"Pearl\",\n        tx: \"PEARL\",\n        lp: false,\n        apy: \"3000\",\n        chainInfo: defaultChainInfo,\n        totalSupply: \"800\",\n        stat: false,\n        dateTime: \"2020-09-23 20:00:00\",\n        double: false,\n        LPToken: \"TGbu32VEGpS4kDmjrmn5ZZJgUyHQiaweoq\",\n        link: \"https://justswap.io/#/home?tokenAddress=TGbu32VEGpS4kDmjrmn5ZZJgUyHQiaweoq&type=swap\"\n      }, {\n        img: \"/static/icon/TRX.png\",\n        name: \"Tron! TRX!\",\n        txt: \"TRX\",\n        tx: \"TRX\",\n        lp: false,\n        apy: \"3000\",\n        chainInfo: defaultChainInfo,\n        totalSupply: \"400\",\n        stat: false,\n        dateTime: \"2020-09-30 20:00:00\",\n        double: true,\n        LPToken: \"TRX\",\n        link: \"https://justswap.io/#/home\"\n      }, {\n        img: \"/static/icon/SSO.png\",\n        name: \"SSO,SSO!\",\n        txt: \"SSO\",\n        tx: \"SSO\",\n        lp: false,\n        apy: \"3000\",\n        chainInfo: defaultChainInfo,\n        totalSupply: \"400\",\n        stat: false,\n        dateTime: \"2020-09-30 20:00:00\",\n        double: true,\n        LPToken: \"TYoZt51oT8ceAZ9iuX6i4vZLY2KJvc4myF\",\n        link: \"https://justswap.io/#/home\"\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.queryInfo();\n  },\n  methods: {\n    updatePoolInfo: function updatePoolInfo(pid, pool, orgPid) {\n      if (!pool) {\n        return;\n      }\n\n      var perBlockReward = new Decimal(rewardPerBlock).mul(pool.poolWeightPercent);\n      console.log([pid, pool, orgPid, pool.poolWeightPercent]);\n      var chainInfo = {\n        supply: new Decimal(16000).mul(pool.poolWeightPercent).toDP(6, Decimal.ROUND_FLOOR).toString(),\n        userStaked: pool.user.stakeIn.toString(),\n        userReward: pool.userToCollect,\n        poolStaked: pool.pool.staked.toString(),\n        rewardPerHour: perBlockReward.mul(28745 / 24).toDP(0, Decimal.ROUND_HALF_CEIL).toString(),\n        rewardPerDay: perBlockReward.mul(28745).toDP(0, Decimal.ROUND_HALF_CEIL).toString(),\n        rewardPerWeek: perBlockReward.mul(7 * 28745).toDP(0, Decimal.ROUND_HALF_CEIL).toString()\n      };\n      var org = this.products[orgPid];\n      org.chainInfo = chainInfo;\n      this.$set(this.products, orgPid, org);\n    },\n    seeTheMenu: function seeTheMenu() {\n      this.$router.push({\n        name: \"Dashboard\"\n      });\n    },\n    loopQueryGlobalPoolInfo: function () {\n      var _loopQueryGlobalPoolInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(pid) {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.queryGlobalPoolInfo(pid);\n\n              case 2:\n                setTimeout(function (_) {\n                  _this.loopQueryGlobalPoolInfo(pid);\n                }, 3000);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loopQueryGlobalPoolInfo(_x) {\n        return _loopQueryGlobalPoolInfo.apply(this, arguments);\n      }\n\n      return loopQueryGlobalPoolInfo;\n    }(),\n    queryGlobalPoolInfo: function () {\n      var _queryGlobalPoolInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(pid) {\n        var product, orgPid, _pool, pool;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.queryingFlag[pid]) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                this.queryingFlag[pid] = true;\n                product = this.products[pid];\n\n                if (product.stat) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 6:\n                orgPid = pid;\n                pid = LPTokenToPoolID(this.products[pid].LPToken);\n\n                if (window.allPoolInfo[pid]) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                _context2.next = 11;\n                return opt.poolInfo(pid);\n\n              case 11:\n                _pool = _context2.sent;\n                this.queryingFlag[pid] = false;\n                this.updatePoolInfo(pid, _pool, orgPid);\n                return _context2.abrupt(\"return\");\n\n              case 15:\n                pool = window.allPoolInfo[pid];\n                this.updatePoolInfo(pid, pool, orgPid);\n                this.queryingFlag[pid] = false;\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function queryGlobalPoolInfo(_x2) {\n        return _queryGlobalPoolInfo.apply(this, arguments);\n      }\n\n      return queryGlobalPoolInfo;\n    }(),\n    queryInfo: function queryInfo() {\n      var _this2 = this;\n\n      this.products.forEach(function (p, i) {\n        if (p.stat) {\n          _this2.loopQueryGlobalPoolInfo(i);\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA,OAAA,OAAA,MAAA,qBAAA;AACA,OAAA,0CAAA;AACA,OAAA,QAAA,MAAA,6BAAA;AACA,SAAA,cAAA,EAAA,eAAA,QAAA,uBAAA;AACA,OAAA,OAAA,MAAA,YAAA;AAEA,IAAA,GAAA,GAAA,QAAA,CAAA,GAAA;AAEA,IAAA,gBAAA,GAAA;AACA,EAAA,MAAA,EAAA,CADA;AAGA,EAAA,UAAA,EAAA,CAHA;AAIA,EAAA,UAAA,EAAA,CAJA;AAMA,EAAA,aAAA,EAAA,CANA;AAOA,EAAA,YAAA,EAAA,CAPA;AAQA,EAAA,aAAA,EAAA;AARA,CAAA;AAWA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,OAAA,EAAA;AAAA,GAFA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,EADA;AAGA,MAAA,UAAA,EAAA,IAHA;AAIA,MAAA,QAAA,EAAA,EAJA;AAKA,MAAA,OAAA,EAAA,KALA;AAOA,MAAA,QAAA,EAAA,CAPA;AAQA,MAAA,YAAA,EAAA,CARA;AASA,MAAA,SAAA,EAAA,CATA;AAUA,MAAA,OAAA,EAAA,CAVA;AAWA,MAAA,WAAA,EAAA,CAXA;AAYA,MAAA,UAAA,EAAA,CAZA;AAaA,MAAA,WAAA,EAAA,CAbA;AAcA,MAAA,QAAA,EAAA,CACA;AACA,QAAA,GAAA,EAAA,uBADA;AAEA,QAAA,IAAA,EAAA,eAFA;AAGA,QAAA,GAAA,EAAA,MAHA;AAIA,QAAA,EAAA,EAAA,MAJA;AAKA,QAAA,EAAA,EAAA,KALA;AAMA,QAAA,GAAA,EAAA,MANA;AAOA,QAAA,SAAA,EAAA,gBAPA;AAQA,QAAA,WAAA,EAAA,MARA;AASA,QAAA,IAAA,EAAA,KATA;AAUA,QAAA,QAAA,EAAA,qBAVA;AAWA,QAAA,MAAA,EAAA,KAXA;AAYA,QAAA,OAAA,EAAA,oCAZA;AAaA,QAAA,IAAA,EAAA;AAbA,OADA,EAgBA;AACA,QAAA,GAAA,EAAA,uBADA;AAEA,QAAA,IAAA,EAAA,aAFA;AAGA,QAAA,GAAA,EAAA,MAHA;AAIA,QAAA,EAAA,EAAA,MAJA;AAKA,QAAA,EAAA,EAAA,KALA;AAMA,QAAA,GAAA,EAAA,MANA;AAOA,QAAA,SAAA,EAAA,gBAPA;AAQA,QAAA,WAAA,EAAA,MARA;AASA,QAAA,IAAA,EAAA,KATA;AAUA,QAAA,QAAA,EAAA,qBAVA;AAWA,QAAA,MAAA,EAAA,KAXA;AAYA,QAAA,OAAA,EAAA,oCAZA;AAaA,QAAA,IAAA,EAAA;AAbA,OAhBA,EA+BA;AACA,QAAA,GAAA,EAAA,2BADA;AAEA,QAAA,IAAA,EAAA,cAFA;AAGA,QAAA,GAAA,EAAA,UAHA;AAIA,QAAA,EAAA,EAAA,UAJA;AAKA,QAAA,EAAA,EAAA,IALA;AAMA,QAAA,GAAA,EAAA,MANA;AAOA,QAAA,SAAA,EAAA,gBAPA;AAQA,QAAA,WAAA,EAAA,MARA;AASA,QAAA,IAAA,EAAA,KATA;AAUA,QAAA,QAAA,EAAA,qBAVA;AAWA,QAAA,MAAA,EAAA,KAXA;AAYA,QAAA,OAAA,EAAA,oCAZA;AAaA,QAAA,IAAA,EAAA;AAbA,OA/BA,EA8CA;AACA,QAAA,GAAA,EAAA,0BADA;AAEA,QAAA,IAAA,EAAA,gBAFA;AAGA,QAAA,GAAA,EAAA,aAHA;AAIA,QAAA,EAAA,EAAA,SAJA;AAKA,QAAA,EAAA,EAAA,IALA;AAMA,QAAA,GAAA,EAAA,MANA;AAOA,QAAA,SAAA,EAAA,gBAPA;AAQA,QAAA,WAAA,EAAA,MARA;AASA,QAAA,IAAA,EAAA,KATA;AAUA,QAAA,QAAA,EAAA,qBAVA;AAWA,QAAA,MAAA,EAAA,KAXA;AAYA,QAAA,OAAA,EAAA,EAZA;AAaA,QAAA,IAAA,EAAA;AAbA,OA9CA,EA6DA;AACA,QAAA,GAAA,EAAA,sBADA;AAEA,QAAA,IAAA,EAAA,SAFA;AAGA,QAAA,GAAA,EAAA,KAHA;AAIA,QAAA,EAAA,EAAA,KAJA;AAKA,QAAA,EAAA,EAAA,KALA;AAMA,QAAA,GAAA,EAAA,MANA;AAOA,QAAA,SAAA,EAAA,gBAPA;AAQA,QAAA,WAAA,EAAA,KARA;AASA,QAAA,IAAA,EAAA,KATA;AAUA,QAAA,QAAA,EAAA,qBAVA;AAWA,QAAA,MAAA,EAAA,KAXA;AAYA,QAAA,OAAA,EAAA,oCAZA;AAaA,QAAA,IAAA,EAAA;AAbA,OA7DA,EA4EA;AACA,QAAA,GAAA,EAAA,wBADA;AAEA,QAAA,IAAA,EAAA,QAFA;AAGA,QAAA,GAAA,EAAA,OAHA;AAIA,QAAA,EAAA,EAAA,OAJA;AAKA,QAAA,EAAA,EAAA,KALA;AAMA,QAAA,GAAA,EAAA,MANA;AAOA,QAAA,SAAA,EAAA,gBAPA;AAQA,QAAA,WAAA,EAAA,KARA;AASA,QAAA,IAAA,EAAA,KATA;AAUA,QAAA,QAAA,EAAA,qBAVA;AAWA,QAAA,MAAA,EAAA,KAXA;AAYA,QAAA,OAAA,EAAA,oCAZA;AAaA,QAAA,IAAA,EAAA;AAbA,OA5EA,EA2FA;AACA,QAAA,GAAA,EAAA,sBADA;AAEA,QAAA,IAAA,EAAA,YAFA;AAGA,QAAA,GAAA,EAAA,KAHA;AAIA,QAAA,EAAA,EAAA,KAJA;AAKA,QAAA,EAAA,EAAA,KALA;AAMA,QAAA,GAAA,EAAA,MANA;AAOA,QAAA,SAAA,EAAA,gBAPA;AAQA,QAAA,WAAA,EAAA,KARA;AASA,QAAA,IAAA,EAAA,KATA;AAUA,QAAA,QAAA,EAAA,qBAVA;AAWA,QAAA,MAAA,EAAA,IAXA;AAYA,QAAA,OAAA,EAAA,KAZA;AAaA,QAAA,IAAA,EAAA;AAbA,OA3FA,EA0GA;AACA,QAAA,GAAA,EAAA,sBADA;AAEA,QAAA,IAAA,EAAA,UAFA;AAGA,QAAA,GAAA,EAAA,KAHA;AAIA,QAAA,EAAA,EAAA,KAJA;AAKA,QAAA,EAAA,EAAA,KALA;AAMA,QAAA,GAAA,EAAA,MANA;AAOA,QAAA,SAAA,EAAA,gBAPA;AAQA,QAAA,WAAA,EAAA,KARA;AASA,QAAA,IAAA,EAAA,KATA;AAUA,QAAA,QAAA,EAAA,qBAVA;AAWA,QAAA,MAAA,EAAA,IAXA;AAYA,QAAA,OAAA,EAAA,oCAZA;AAaA,QAAA,IAAA,EAAA;AAbA,OA1GA;AAdA,KAAA;AAyIA,GA9IA;AAgJA,EAAA,OAhJA,qBAgJA;AACA,SAAA,SAAA;AACA,GAlJA;AAoJA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,GADA,EACA,IADA,EACA,MADA,EACA;AACA,UAAA,CAAA,IAAA,EAAA;AACA;AACA;;AAEA,UAAA,cAAA,GAAA,IAAA,OAAA,CAAA,cAAA,EAAA,GAAA,CAAA,IAAA,CAAA,iBAAA,CAAA;AAEA,MAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,CAAA,iBAAA,CAAA;AACA,UAAA,SAAA,GAAA;AACA,QAAA,MAAA,EAAA,IAAA,OAAA,CAAA,KAAA,EAAA,GAAA,CAAA,IAAA,CAAA,iBAAA,EAAA,IAAA,CAAA,CAAA,EAAA,OAAA,CAAA,WAAA,EAAA,QAAA,EADA;AAEA,QAAA,UAAA,EAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,QAAA,EAFA;AAGA,QAAA,UAAA,EAAA,IAAA,CAAA,aAHA;AAIA,QAAA,UAAA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,QAAA,EAJA;AAMA,QAAA,aAAA,EAAA,cAAA,CAAA,GAAA,CAAA,QAAA,EAAA,EAAA,IAAA,CAAA,CAAA,EAAA,OAAA,CAAA,eAAA,EAAA,QAAA,EANA;AAOA,QAAA,YAAA,EAAA,cAAA,CAAA,GAAA,CAAA,KAAA,EAAA,IAAA,CAAA,CAAA,EAAA,OAAA,CAAA,eAAA,EAAA,QAAA,EAPA;AAQA,QAAA,aAAA,EAAA,cAAA,CAAA,GAAA,CAAA,IAAA,KAAA,EAAA,IAAA,CAAA,CAAA,EAAA,OAAA,CAAA,eAAA,EAAA,QAAA;AARA,OAAA;AAWA,UAAA,GAAA,GAAA,KAAA,QAAA,CAAA,MAAA,CAAA;AACA,MAAA,GAAA,CAAA,SAAA,GAAA,SAAA;AACA,WAAA,IAAA,CAAA,KAAA,QAAA,EAAA,MAAA,EAAA,GAAA;AACA,KAvBA;AAyBA,IAAA,UAzBA,wBAyBA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KA3BA;AA6BA,IAAA,uBA7BA;AAAA,8GA6BA,GA7BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA8BA,KAAA,mBAAA,CAAA,GAAA,CA9BA;;AAAA;AA+BA,gBAAA,UAAA,CAAA,UAAA,CAAA,EAAA;AACA,kBAAA,KAAA,CAAA,uBAAA,CAAA,GAAA;AACA,iBAFA,EAEA,IAFA,CAAA;;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoCA,IAAA,mBApCA;AAAA,2GAoCA,GApCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qBAqCA,KAAA,YAAA,CAAA,GAAA,CArCA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAwCA,qBAAA,YAAA,CAAA,GAAA,IAAA,IAAA;AAEA,gBAAA,OA1CA,GA0CA,KAAA,QAAA,CAAA,GAAA,CA1CA;;AAAA,oBA2CA,OAAA,CAAA,IA3CA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AA+CA,gBAAA,MA/CA,GA+CA,GA/CA;AAgDA,gBAAA,GAAA,GAAA,eAAA,CAAA,KAAA,QAAA,CAAA,GAAA,EAAA,OAAA,CAAA;;AAhDA,oBAkDA,MAAA,CAAA,WAAA,CAAA,GAAA,CAlDA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAmDA,GAAA,CAAA,QAAA,CAAA,GAAA,CAnDA;;AAAA;AAmDA,gBAAA,KAnDA;AAoDA,qBAAA,YAAA,CAAA,GAAA,IAAA,KAAA;AACA,qBAAA,cAAA,CAAA,GAAA,EAAA,KAAA,EAAA,MAAA;AArDA;;AAAA;AAyDA,gBAAA,IAzDA,GAyDA,MAAA,CAAA,WAAA,CAAA,GAAA,CAzDA;AA0DA,qBAAA,cAAA,CAAA,GAAA,EAAA,IAAA,EAAA,MAAA;AACA,qBAAA,YAAA,CAAA,GAAA,IAAA,KAAA;;AA3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA8DA,IAAA,SA9DA,uBA8DA;AAAA;;AACA,WAAA,QAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,YAAA,CAAA,CAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,uBAAA,CAAA,CAAA;AACA;AACA,OAJA;AAKA;AApEA;AApJA,CAAA","sourcesContent":["<template>\n  <div class=\"list-container\">\n    <div class=\"row\">\n      <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-12 col-xs-12 text-center\"\n           v-for=\"(p, index) in products\" :key=\"index\">\n        <div class=\"lists-div\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <div class=\"product-logo-div\">\n                <img class=\"product-logo\" :src=\"p.img\" alt=\"\"/>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col\">\n              <p class=\"pdt-name\">{{ p.name }}</p>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col text-left\">\n              <p class=\"pdt-tit\">{{ $t(\"list.info\") }}</p>\n              <p class=\"pdt-txt\">{{ $t(\"token.name\") }} {{ $t(\"list.total\") }}{{ p.totalSupply }}</p>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col text-left\">\n              <p class=\"pdt-tit\">{{ $t(\"list.deposit\") }}</p>\n              <p class=\"pdt-txt\">{{ $t(\"list.total\") }}{{ p.chainInfo.poolStaked }}</p>\n              <p class=\"pdt-txt\">{{ $t(\"list.your\") }}{{ p.chainInfo.userStaked }}</p>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col text-left\">\n              <p class=\"pdt-tit\">{{ $t(\"list.earned\") }}</p>\n              <p class=\"pdt-txt\">{{ $t(\"list.available\") }}{{ p.chainInfo.userReward }}</p>\n              <p class=\"pdt-txt\">{{ $t(\"list.hReward\") }}{{ p.chainInfo.rewardPerHour }}</p>\n              <p class=\"pdt-txt\">{{ $t(\"list.dReward\") }}{{ p.chainInfo.rewardPerDay }}</p>\n              <p class=\"pdt-txt\">{{ $t(\"list.wReward\") }}{{ p.chainInfo.rewardPerWeek }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col d-flex justify-content-around\">\n        <button type=\"submit\" class=\"d-wallet-btn\" @click=\"seeTheMenu\">\n          <img class=\"d-wallet-btn-icon text-right\" :src=\"'/static/logo/logo.png'\" alt=\"\"/>\n          <h2 class=\"d-wallet-btn-name text-left\">{{ $t(\"wallet.seeTheMenu\") }}</h2>\n        </button>\n      </div>\n    </div>\n\n    <loading :active.sync=\"loading\"\n             :can-cancel=\"false\"\n             :is-full-page=\"true\"></loading>\n  </div>\n</template>\n\n<script>\nimport Loading from 'vue-loading-overlay';\nimport 'vue-loading-overlay/dist/vue-loading.css';\nimport chainOpt from \"@/utils/web3/chainOperation\";\nimport {rewardPerBlock, LPTokenToPoolID} from \"@/utils/web3/constant\";\nimport Decimal from \"decimal.js\";\n\nlet opt = chainOpt.opt\n\nlet defaultChainInfo = {\n  supply: 0,\n\n  userStaked: 0,\n  poolStaked: 0,\n\n  rewardPerHour: 0,\n  rewardPerDay: 0,\n  rewardPerWeek: 0,\n}\n\nexport default {\n  name: \"List\",\n  components: { Loading },\n\n  data() {\n    return {\n      queryingFlag: [],\n\n      allBalance: null,\n      poolInfo: [],\n      loading: false,\n\n      allTotal: 0,\n      depositTotal: 0,\n      yourTotal: 0,\n      rewards: 0,\n      hourRewards: 0,\n      dayRewards: 0,\n      weekRewards: 0,\n      products: [\n        {\n          img: \"/static/icon/TEFI.png\",\n          name: \"TEFI, Double!\",\n          txt: \"TEFI\",\n          tx: \"TEFI\",\n          lp: false,\n          apy: \"3000\",\n          chainInfo: defaultChainInfo,\n          totalSupply: \"9600\" ,\n          stat: false,\n          dateTime: \"2020-09-23 20:00:00\",\n          double: false,\n          LPToken: \"TSS89kdrcekgmErvaFv73raFiQePwnun8Z\",\n          link: \"https://justswap.io/#/home?tokenAddress=TSS89kdrcekgmErvaFv73raFiQePwnun8Z&type=swap\",\n        },\n        {\n          img: \"/static/icon/USDT.png\",\n          name: \"USDT to SSO\",\n          txt: \"USDT\",\n          tx: \"USDT\",\n          lp: false,\n          apy: \"3000\",\n          chainInfo: defaultChainInfo,\n          totalSupply: \"1600\" ,\n          stat: false,\n          dateTime: \"2020-09-23 20:00:00\",\n          double: false,\n          LPToken: \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\",\n          link: \"https://justswap.io/#/home?tokenAddress=TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t&type=swap\",\n        },\n        {\n          img: \"/static/icon/TEFI-TRX.png\",\n          name: \"TEFI TRX JLP\",\n          txt: \"TEFI-TRX\",\n          tx: \"TEFI-TRX\",\n          lp: true,\n          apy: \"3000\",\n          chainInfo: defaultChainInfo,\n          totalSupply: \"4400\" ,\n          stat: false,\n          dateTime: \"2020-09-23 20:00:00\",\n          double: false,\n          LPToken: \"TVbTu1dVwwcJ4zVNwKdU98aSWkxHWD94jb\",\n          link: \"https://justswap.io/#/home?tokenAddress=TSS89kdrcekgmErvaFv73raFiQePwnun8Z&type=add\",\n        },\n        {\n          img: \"/static/icon/SSO-TRX.png\",\n          name: \"Sirius Oracle!\",\n          txt: \"SSO-TRX JLP\",\n          tx: \"SSO-TRX\",\n          lp: true,\n          apy: \"3000\",\n          chainInfo: defaultChainInfo,\n          totalSupply: \"6000\" ,\n          stat: false,\n          dateTime: \"2020-09-23 20:00:00\",\n          double: false,\n          LPToken: \"\",\n          link: \"https://justswap.io/#/home\",\n        },\n        {\n          img: \"/static/icon/SLM.png\",\n          name: \"Salmon!\",\n          txt: \"SLM\",\n          tx: \"SLM\",\n          lp: false,\n          apy: \"3000\",\n          chainInfo: defaultChainInfo,\n          totalSupply: \"800\" ,\n          stat: false,\n          dateTime: \"2020-09-23 20:00:00\",\n          double: false,\n          LPToken: \"TEbKj6dFUSs6Q6dW5F9R4DZwTWKV9EV2BR\",\n          link: \"https://justswap.io/#/home?tokenAddress=TEbKj6dFUSs6Q6dW5F9R4DZwTWKV9EV2BR&type=swap\",\n        },\n        {\n          img: \"/static/icon/PEARL.png\",\n          name: \"Pearl!\",\n          txt: \"Pearl\",\n          tx: \"PEARL\",\n          lp: false,\n          apy: \"3000\",\n          chainInfo: defaultChainInfo,\n          totalSupply: \"800\" ,\n          stat: false,\n          dateTime: \"2020-09-23 20:00:00\",\n          double: false,\n          LPToken: \"TGbu32VEGpS4kDmjrmn5ZZJgUyHQiaweoq\",\n          link: \"https://justswap.io/#/home?tokenAddress=TGbu32VEGpS4kDmjrmn5ZZJgUyHQiaweoq&type=swap\",\n        },\n        {\n          img: \"/static/icon/TRX.png\",\n          name: \"Tron! TRX!\",\n          txt: \"TRX\",\n          tx: \"TRX\",\n          lp: false,\n          apy: \"3000\",\n          chainInfo: defaultChainInfo,\n          totalSupply: \"400\" ,\n          stat: false,\n          dateTime: \"2020-09-30 20:00:00\",\n          double: true,\n          LPToken: \"TRX\",\n          link: \"https://justswap.io/#/home\",\n        },\n        {\n          img: \"/static/icon/SSO.png\",\n          name: \"SSO,SSO!\",\n          txt: \"SSO\",\n          tx: \"SSO\",\n          lp: false,\n          apy: \"3000\",\n          chainInfo: defaultChainInfo,\n          totalSupply: \"400\" ,\n          stat: false,\n          dateTime: \"2020-09-30 20:00:00\",\n          double: true,\n          LPToken: \"TYoZt51oT8ceAZ9iuX6i4vZLY2KJvc4myF\",\n          link: \"https://justswap.io/#/home\",\n        },\n      ]\n    }\n  },\n\n  mounted() {\n    this.queryInfo()\n  },\n\n  methods: {\n    updatePoolInfo(pid, pool, orgPid) {\n      if(!pool) {\n        return\n      }\n\n      let perBlockReward = new Decimal(rewardPerBlock).mul(pool.poolWeightPercent)\n\n      console.log([pid, pool, orgPid, pool.poolWeightPercent])\n      let chainInfo = {\n        supply: new Decimal(16000).mul(pool.poolWeightPercent).toDP(6, Decimal.ROUND_FLOOR).toString(),\n        userStaked: pool.user.stakeIn.toString(),\n        userReward: pool.userToCollect,\n        poolStaked: pool.pool.staked.toString(),\n\n        rewardPerHour: perBlockReward.mul(28745 / 24).toDP(0, Decimal.ROUND_HALF_CEIL).toString(),\n        rewardPerDay: perBlockReward.mul(28745).toDP(0, Decimal.ROUND_HALF_CEIL).toString(),\n        rewardPerWeek: perBlockReward.mul(7 * 28745).toDP(0, Decimal.ROUND_HALF_CEIL).toString(),\n      }\n\n      let org = this.products[orgPid]\n      org.chainInfo = chainInfo\n      this.$set(this.products, orgPid, org);\n    },\n\n    seeTheMenu() {\n      this.$router.push({name: \"Dashboard\"})\n    },\n\n    async loopQueryGlobalPoolInfo(pid) {\n      await this.queryGlobalPoolInfo(pid)\n      setTimeout(_ => {\n        this.loopQueryGlobalPoolInfo(pid)\n      }, 3000)\n    },\n\n    async queryGlobalPoolInfo(pid) {\n      if (this.queryingFlag[pid]) {\n        return\n      }\n      this.queryingFlag[pid] = true\n\n      let product = this.products[pid]\n      if(!product.stat) {\n        return\n      }\n\n      let orgPid = pid\n      pid = LPTokenToPoolID(this.products[pid].LPToken)\n\n      if (!window.allPoolInfo[pid]) {\n        let pool = await opt.poolInfo(pid)\n        this.queryingFlag[pid] = false\n        this.updatePoolInfo(pid, pool, orgPid)\n        return\n      }\n\n      let pool = window.allPoolInfo[pid]\n      this.updatePoolInfo(pid, pool, orgPid)\n      this.queryingFlag[pid] = false\n    },\n\n    queryInfo() {\n      this.products.forEach((p, i)=>{\n        if(p.stat) {\n          this.loopQueryGlobalPoolInfo(i)\n        }\n      })\n    }\n  },\n}\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n@import \"../../styles/colors.scss\";\n@import \"../../styles/fonts.scss\";\n\n.list-container {\n  .lists-div {\n    border-width: 1px;\n    border-style: solid;\n    border-color: $divBorderColor;\n    border-image: initial;\n    border-radius: 15px;\n    padding: 25px 15px 15px;\n    margin-top: 15px !important;\n    background-color: $divBg;\n\n    .product-logo {\n      width: 80px;\n      height: 80px;\n    }\n\n    .product-logo-div {\n      background-color: $bg2;\n      font-size: 36px;\n      height: 120px;\n      width: 120px;\n      border-radius: 60px;\n      -webkit-box-align: center;\n      align-items: center;\n      display: flex;\n      -webkit-box-pack: center;\n      justify-content: center;\n      box-shadow: $btnBoxShadow-sushi 4px 4px 8px inset, $btnBoxShadow-sushi-2 -6px -6px 12px inset;\n      margin: 0 auto 16px;\n    }\n\n    .pdt-name {\n      font-family: $fontTit;\n      font-size: 24px;\n      font-weight: 700;\n    }\n\n    .pdt-tit {\n      font-family: $fontTit;\n      font-size: 16px;\n      font-weight: 700;\n      color: $divBorderColor;\n    }\n\n    .pdt-txt {\n      font-family: $fontTxt;\n      font-size: 14px;\n      font-weight: 400;\n      color: $txtColor;\n    }\n  }\n\n  .d-wallet-btn {\n    height: 80px;\n    width: 290px;\n    display: flex;\n    justify-content: center;\n    -webkit-box-align: center;\n    align-items: center;\n    opacity: 1;\n    cursor: pointer;\n    border-radius: 40px;\n    border-width: 1px;\n    border-style: solid;\n    border-color: $divBorderColor;\n    border-image: initial;\n    color: $walletBtnColor;\n    background-color: $btnBg;\n    box-shadow: $btnBoxShadow 0 2px 4px 2px;\n    transition: all 0.1s ease 0s;\n    outline: $walletBtnOutline;\n    margin: 45px 0 !important;\n  }\n  .d-wallet-btn:hover,\n  .d-wallet-btn:focus,\n  .d-wallet-btn:active {\n    border-width: 1px;\n    border-style: solid;\n    border-color: $walletBtnColor;\n    border-image: initial;\n    border-radius: 40px;\n    outline: $walletBtnOutline;\n    color: $walletBtnBg;\n    background-color: $walletBtnColor;\n  }\n  .d-wallet-btn-name {\n    margin: 0 0 0 16px;\n    letter-spacing: 2px;\n    font-family: $fontTit;\n    text-transform: capitalize;\n    font-size: 18px;\n  }\n  .d-wallet-btn-icon {\n    height: 40px;\n    width: 40px;\n  }\n}\n\n</style>\n"],"sourceRoot":"src/views/list"}]}