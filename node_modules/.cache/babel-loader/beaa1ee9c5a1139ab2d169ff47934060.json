{"remainingRequest":"/Users/lyx/WebstormProjects/idc-geyser-v2/node_modules/babel-loader/lib/index.js!/Users/lyx/WebstormProjects/idc-geyser-v2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyx/WebstormProjects/idc-geyser-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyx/WebstormProjects/idc-geyser-v2/src/components/Countdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyx/WebstormProjects/idc-geyser-v2/src/components/Countdown.vue","mtime":1600071227565},{"path":"/Users/lyx/WebstormProjects/idc-geyser-v2/node_modules/cache-loader/dist/cjs.js","mtime":1599786627641},{"path":"/Users/lyx/WebstormProjects/idc-geyser-v2/node_modules/babel-loader/lib/index.js","mtime":1599578972213},{"path":"/Users/lyx/WebstormProjects/idc-geyser-v2/node_modules/cache-loader/dist/cjs.js","mtime":1599786627641},{"path":"/Users/lyx/WebstormProjects/idc-geyser-v2/node_modules/vue-loader/lib/index.js","mtime":1599786628079}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Countdown',\n  props: [\"dateTime\"],\n  data: function data() {\n    return {\n      d: '',\n      h: '',\n      m: '',\n      s: ''\n    };\n  },\n  created: function created() {\n    this.countTime();\n  },\n  methods: {\n    countTime: function countTime() {\n      var date = new Date();\n      var now = date.getTime();\n      var endDate = new Date(this.dateTime);\n      var end = endDate.getTime();\n      var leftTime = end - now;\n\n      if (leftTime >= 0) {\n        this.d = Math.floor(leftTime / 1000 / 60 / 60 / 24);\n        this.h = Math.floor(leftTime / 1000 / 60 / 60 % 24);\n        this.m = Math.floor(leftTime / 1000 / 60 % 60);\n        this.s = Math.floor(leftTime / 1000 % 60);\n      }\n\n      this.h = this.h < 10 ? \"0\" + this.h : this.h;\n      this.m = this.m < 10 ? \"0\" + this.m : this.m;\n      this.s = this.s < 10 ? \"0\" + this.s : this.s;\n      setTimeout(this.countTime, 1000);\n    }\n  }\n};",{"version":3,"sources":["Countdown.vue"],"names":[],"mappings":";;;;;;;;;AAUA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,KAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,CAAA,EAAA,EADA;AAEA,MAAA,CAAA,EAAA,EAFA;AAGA,MAAA,CAAA,EAAA,EAHA;AAIA,MAAA,CAAA,EAAA;AAJA,KAAA;AAMA,GAVA;AAWA,EAAA,OAXA,qBAWA;AACA,SAAA,SAAA;AACA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,IAAA,GAAA,IAAA,IAAA,EAAA;AACA,UAAA,GAAA,GAAA,IAAA,CAAA,OAAA,EAAA;AACA,UAAA,OAAA,GAAA,IAAA,IAAA,CAAA,KAAA,QAAA,CAAA;AACA,UAAA,GAAA,GAAA,OAAA,CAAA,OAAA,EAAA;AAEA,UAAA,QAAA,GAAA,GAAA,GAAA,GAAA;;AAEA,UAAA,QAAA,IAAA,CAAA,EAAA;AACA,aAAA,CAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,GAAA,IAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,CAAA;AACA,aAAA,CAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,GAAA,IAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,CAAA;AACA,aAAA,CAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,GAAA,IAAA,GAAA,EAAA,GAAA,EAAA,CAAA;AACA,aAAA,CAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,GAAA,IAAA,GAAA,EAAA,CAAA;AACA;;AAEA,WAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,GAAA,MAAA,KAAA,CAAA,GAAA,KAAA,CAAA;AACA,WAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,GAAA,MAAA,KAAA,CAAA,GAAA,KAAA,CAAA;AACA,WAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,GAAA,MAAA,KAAA,CAAA,GAAA,KAAA,CAAA;AAEA,MAAA,UAAA,CAAA,KAAA,SAAA,EAAA,IAAA,CAAA;AACA;AArBA;AAdA,CAAA","sourcesContent":["<template>\n  <div class=\"countdown-div\">\n    <b class=\"countdown-txt\">{{ d }}{{ $t(\"date.day\") }}</b>\n    <b class=\"countdown-txt\">{{ h }}</b>:\n    <b class=\"countdown-txt\">{{ m }}</b>:\n    <b class=\"countdown-txt\">{{ s }}</b>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Countdown',\n  props: [\"dateTime\"],\n  data() {\n    return {\n      d: '',\n      h: '',\n      m: '',\n      s: '',\n    }\n  },\n  created() {\n    this.countTime()\n  },\n  methods: {\n    countTime() {\n      let date = new Date()\n      let now = date.getTime()\n      let endDate = new Date(this.dateTime)\n      let end = endDate.getTime()\n\n      let leftTime = end - now\n\n      if (leftTime >= 0) {\n        this.d = Math.floor(leftTime / 1000 / 60 / 60 / 24)\n        this.h = Math.floor((leftTime / 1000 / 60 / 60) % 24)\n        this.m = Math.floor((leftTime / 1000 / 60) % 60)\n        this.s = Math.floor((leftTime / 1000) % 60)\n      }\n\n      this.h = (this.h < 10) ? \"0\" + this.h : this.h\n      this.m = this.m < 10 ? \"0\" + this.m : this.m\n      this.s = this.s < 10 ? \"0\" + this.s : this.s\n\n      setTimeout(this.countTime, 1000)\n    },\n  },\n}\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n@import \"../styles/colors.scss\";\n@import \"../styles/fonts.scss\";\n\n.countdown-div {\n\n}\n</style>\n"],"sourceRoot":"src/components"}]}