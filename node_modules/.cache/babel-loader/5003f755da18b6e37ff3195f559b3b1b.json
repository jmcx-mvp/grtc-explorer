{"remainingRequest":"/Users/lyx/WebstormProjects/avg-geyser/node_modules/babel-loader/lib/index.js!/Users/lyx/WebstormProjects/avg-geyser/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyx/WebstormProjects/avg-geyser/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyx/WebstormProjects/avg-geyser/src/views/dashboard/actions/Burn.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyx/WebstormProjects/avg-geyser/src/views/dashboard/actions/Burn.vue","mtime":1599645386000},{"path":"/Users/lyx/WebstormProjects/avg-geyser/node_modules/cache-loader/dist/cjs.js","mtime":1599786627641},{"path":"/Users/lyx/WebstormProjects/avg-geyser/node_modules/babel-loader/lib/index.js","mtime":1599578972213},{"path":"/Users/lyx/WebstormProjects/avg-geyser/node_modules/cache-loader/dist/cjs.js","mtime":1599786627641},{"path":"/Users/lyx/WebstormProjects/avg-geyser/node_modules/vue-loader/lib/index.js","mtime":1599786628079}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/lyx/WebstormProjects/avg-geyser/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport chainOpt from \"../../../utils/web3/chainOperation\"; // Import component\n\nimport Loading from 'vue-loading-overlay'; // Import stylesheet\n\nimport 'vue-loading-overlay/dist/vue-loading.css';\nimport Decimal from \"decimal.js\";\nvar opt = chainOpt.opt;\nexport default {\n  name: \"Burn\",\n  props: [\"hideBurn\", \"allBalance\"],\n  components: {\n    Loading: Loading\n  },\n  data: function data() {\n    return {\n      burnAmount: \"0\",\n      willUnlock: \"0\",\n      loading: false\n    };\n  },\n  watch: {\n    burnAmount: function burnAmount() {\n      this.willUnlock = this.burnAmount;\n    }\n  },\n  methods: {\n    burn: function () {\n      var _burn = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var tokenAmount, validUnlock, unlockResult;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                tokenAmount = 0;\n                validUnlock = false;\n                _context.prev = 2;\n                Decimal.set({\n                  toExpPos: 256\n                });\n                tokenAmount = new Decimal(this.burnAmount);\n                validUnlock = tokenAmount.lte(new Decimal(this.allBalance.syn));\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                setTimeout(function (_) {\n                  _this.$notification.open({\n                    message: 'Invalid Input!',\n                    description: \"Amount must be a number\",\n                    duration: 0\n                  });\n\n                  _this.loading = false;\n                }, 400);\n                return _context.abrupt(\"return\");\n\n              case 12:\n                this.loading = true;\n\n                if (validUnlock) {\n                  _context.next = 17;\n                  break;\n                }\n\n                this.loading = false;\n                this.$notification.open({\n                  message: 'Burn amount exceed!',\n                  description: validUnlock,\n                  duration: 0\n                });\n                return _context.abrupt(\"return\");\n\n              case 17:\n                _context.next = 19;\n                return opt.burnSyn(tokenAmount);\n\n              case 19:\n                unlockResult = _context.sent;\n\n                if (unlockResult !== null) {\n                  console.log(\"mint transaction send success, tx hash is: \", unlockResult);\n                } else {//user cancel or other unknown things happened, do nothing\n                }\n\n                this.loading = false;\n\n                if (typeof this.hideBurn === \"function\") {\n                  this.hideBurn();\n                }\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 8]]);\n      }));\n\n      function burn() {\n        return _burn.apply(this, arguments);\n      }\n\n      return burn;\n    }()\n  }\n};",{"version":3,"sources":["Burn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,OAAA,QAAA,2C,CACA;;AACA,OAAA,OAAA,MAAA,qBAAA,C,CACA;;AACA,OAAA,0CAAA;AACA,OAAA,OAAA,MAAA,YAAA;AAEA,IAAA,GAAA,GAAA,QAAA,CAAA,GAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,KAAA,EAAA,CAAA,UAAA,EAAA,YAAA,CAFA;AAIA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GAJA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,GADA;AAEA,MAAA,UAAA,EAAA,GAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAAA;AAKA,GAdA;AAgBA,EAAA,KAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,WAAA,UAAA,GAAA,KAAA,UAAA;AACA;AAHA,GAhBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,IADA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,WAFA,GAEA,CAFA;AAGA,gBAAA,WAHA,GAGA,KAHA;AAAA;AAKA,gBAAA,OAAA,CAAA,GAAA,CAAA;AAAA,kBAAA,QAAA,EAAA;AAAA,iBAAA;AACA,gBAAA,WAAA,GAAA,IAAA,OAAA,CAAA,KAAA,UAAA,CAAA;AACA,gBAAA,WAAA,GAAA,WAAA,CAAA,GAAA,CAAA,IAAA,OAAA,CAAA,KAAA,UAAA,CAAA,GAAA,CAAA,CAAA;AAPA;AAAA;;AAAA;AAAA;AAAA;AASA,gBAAA,UAAA,CAAA,UAAA,CAAA,EAAA;AACA,kBAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA;AACA,oBAAA,OAAA,EAAA,gBADA;AAEA,oBAAA,WAAA,EAAA,yBAFA;AAGA,oBAAA,QAAA,EAAA;AAHA,mBAAA;;AAKA,kBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,iBAPA,EAOA,GAPA,CAAA;AATA;;AAAA;AAuBA,qBAAA,OAAA,GAAA,IAAA;;AAvBA,oBAwBA,WAxBA;AAAA;AAAA;AAAA;;AAyBA,qBAAA,OAAA,GAAA,KAAA;AACA,qBAAA,aAAA,CAAA,IAAA,CAAA;AACA,kBAAA,OAAA,EAAA,qBADA;AAEA,kBAAA,WAAA,EAAA,WAFA;AAGA,kBAAA,QAAA,EAAA;AAHA,iBAAA;AA1BA;;AAAA;AAAA;AAAA,uBAkCA,GAAA,CAAA,OAAA,CAAA,WAAA,CAlCA;;AAAA;AAkCA,gBAAA,YAlCA;;AAmCA,oBAAA,YAAA,KAAA,IAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,6CAAA,EAAA,YAAA;AACA,iBAFA,MAEA,CACA;AACA;;AAEA,qBAAA,OAAA,GAAA,KAAA;;AACA,oBAAA,OAAA,KAAA,QAAA,KAAA,UAAA,EAAA;AACA,uBAAA,QAAA;AACA;;AA5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAtBA,CAAA","sourcesContent":["<template>\n  <div class=\"row text-center burn-div\">\n    <div class=\"col\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <img class=\"burn-logo\" :src=\"'/static/like-to-do/burn.png'\" :alt=\"$t('token.name')\"/>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <p class=\"burn-tit\">{{ $t(\"action.burn\") }}</p>\n          <p class=\"burn-txt\">{{ $t(\"dashboard.burn.txt\") }}</p>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <p class=\"burn-input-txt\">{{ $t(\"dashboard.burn.confirm\") }}</p>\n          <input type=\"text\" v-model=\"burnAmount\" placeholder=\"0.00\" class=\"burn-input\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-6 text-left notes-txt\">\n          {{ $t(\"dashboard.burn.unlock\") }} {{willUnlock}} {{ $t(\"token.name\") }}\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <input type=\"submit\" class=\"btn btn-info btn-burn-now\" value=\"Burn Now\"\n                 @click=\"burn\"\n          >\n        </div>\n      </div>\n    </div>\n\n    <loading :active.sync=\"loading\"\n             :can-cancel=\"false\"\n             :is-full-page=\"true\"></loading>\n  </div>\n</template>\n\n<script>\nimport chainOpt from \"../../../utils/web3/chainOperation\";\n// Import component\nimport Loading from 'vue-loading-overlay';\n// Import stylesheet\nimport 'vue-loading-overlay/dist/vue-loading.css';\nimport Decimal from \"decimal.js\";\n\nlet opt = chainOpt.opt\nexport default {\n  name: \"Burn\",\n  props: [\"hideBurn\", \"allBalance\"],\n\n  components: {\n    Loading\n  },\n\n  data(){\n    return {\n      burnAmount: \"0\",\n      willUnlock: \"0\",\n      loading: false,\n    }\n  },\n\n  watch: {\n    burnAmount() {\n      this.willUnlock = this.burnAmount\n    }\n  },\n\n  methods: {\n    async burn() {\n      let tokenAmount = 0\n      let validUnlock = false\n      try {\n        Decimal.set({ toExpPos: 256 })\n        tokenAmount = new Decimal(this.burnAmount)\n        validUnlock = tokenAmount.lte(new Decimal(this.allBalance.syn))\n      } catch (e) {\n        setTimeout(_=>{\n          this.$notification.open({\n            message: 'Invalid Input!',\n            description: \"Amount must be a number\",\n            duration: 0,\n          });\n          this.loading = false\n        }, 400)\n\n        return\n      }\n\n\n\n      this.loading = true\n      if(!validUnlock) {\n        this.loading = false\n        this.$notification.open({\n          message: 'Burn amount exceed!',\n          description: validUnlock,\n          duration: 0,\n        });\n        return\n      }\n\n      let unlockResult = await opt.burnSyn(tokenAmount)\n      if(unlockResult !== null){\n        console.log(\"mint transaction send success, tx hash is: \", unlockResult)\n      } else {\n        //user cancel or other unknown things happened, do nothing\n      }\n\n      this.loading = false\n      if(typeof this.hideBurn === \"function\") {\n        this.hideBurn()\n      }\n    }\n  },\n}\n</script>\n\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n@import \"../../../styles/colors.scss\";\n@import \"../../../styles/fonts.scss\";\n\n.burn-div {\n  flex: 1 1 0;\n  padding: 24px 0;\n\n  .burn-logo {\n    width: 180px;\n    height: 180px;\n  }\n\n  .burn-tit {\n    font-size: 32px;\n    color: $fontColor;\n    letter-spacing: 2px;\n    margin: 15px 0 15px;\n    font-family: $fontTit;\n  }\n  .burn-txt,\n  .burn-input-txt {\n    font-size: 16px;\n    color: $txtColor;\n    font-weight: 400;\n    font-family: $fontTxt;\n  }\n  .burn-input-txt {\n    margin-top: 30px;\n  }\n  .burn-input {\n    width: 100%;\n    height: 54px;\n    background-color: $bg;\n    font-size: 24px;\n    color: $fontColor;\n    padding: 16px;\n    border-width: 1px;\n    border-style: solid;\n    border-color: $divBorderColor;\n    border-image: initial;\n    border-radius: 20px;\n    outline: none;\n    margin-bottom: 12px;\n    font-family: $fontTxt;\n  }\n\n  .notes-txt {\n    color: $notesColor;\n    font-family: $fontTxt;\n    font-size: 10px;\n    line-height: 18px;\n    letter-spacing: 0.5px;\n    font-weight: 400;\n  }\n\n  .btn-burn-now {\n    color: $btnFontColor;\n    background-color: $btnBg;\n    font-family: $fontTit;\n    width: 100%;\n    height: 72px;\n    margin-top: 30px;\n    text-transform: uppercase;\n    cursor: pointer;\n    border-width: 1px;\n    border-style: solid;\n    border-color: $divBorderColor;\n    border-image: initial;\n    border-radius: 5px;\n    transition: all 0.1s ease-in 0s;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/dashboard/actions"}]}