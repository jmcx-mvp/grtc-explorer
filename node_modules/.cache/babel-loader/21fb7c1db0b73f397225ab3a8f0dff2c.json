{"remainingRequest":"/Users/lyx/WebstormProjects/avg-geyser/node_modules/babel-loader/lib/index.js!/Users/lyx/WebstormProjects/avg-geyser/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lyx/WebstormProjects/avg-geyser/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyx/WebstormProjects/avg-geyser/src/views/dashboard/actions/Mint.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyx/WebstormProjects/avg-geyser/src/views/dashboard/actions/Mint.vue","mtime":1599645606000},{"path":"/Users/lyx/WebstormProjects/avg-geyser/node_modules/cache-loader/dist/cjs.js","mtime":1599786627641},{"path":"/Users/lyx/WebstormProjects/avg-geyser/node_modules/babel-loader/lib/index.js","mtime":1599578972213},{"path":"/Users/lyx/WebstormProjects/avg-geyser/node_modules/cache-loader/dist/cjs.js","mtime":1599786627641},{"path":"/Users/lyx/WebstormProjects/avg-geyser/node_modules/vue-loader/lib/index.js","mtime":1599786628079}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/lyx/WebstormProjects/avg-geyser/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport chainOpt from \"../../../utils/web3/chainOperation\";\nimport $ from \"jquery\";\nimport Decimal from \"decimal.js\";\nimport * as constant from \"@/utils/web3/constant\"; // Import component\n\nimport Loading from 'vue-loading-overlay'; // Import stylesheet\n\nimport 'vue-loading-overlay/dist/vue-loading.css';\nvar opt = chainOpt.opt;\nexport default {\n  name: \"mint\",\n  components: {\n    Loading: Loading\n  },\n  props: [\"hideMint\", \"allBalance\"],\n  data: function data() {\n    return {\n      synAmount: \"0\",\n      enabled: false,\n      willLock: \"0\",\n      loading: false\n    };\n  },\n  watch: {\n    enabled: function enabled() {\n      if (this.enabled) {\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").show();\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").removeAttr(\"disabled\");\n      } else {\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").hide();\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").attr(\"disabled\", \"disabled\");\n      }\n    },\n    synAmount: function synAmount() {\n      this.willLock = this.synAmount;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    setTimeout( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return opt.isSynEnabled().catch(function (e) {\n                  return false;\n                });\n\n              case 2:\n                _this.enabled = _context.sent;\n\n                if (!_this.enabled) {\n                  _this.$nextTick(function (_) {\n                    $(_this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").hide();\n                    $(_this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").attr(\"disabled\", \"disabled\");\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(), 500);\n  },\n  methods: {\n    enableMint: function () {\n      var _enableMint = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var enabled, _;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.loading = true;\n                _context2.next = 3;\n                return opt.isSynEnabled();\n\n              case 3:\n                enabled = _context2.sent;\n\n                if (!enabled) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                this.enabled = true;\n                this.loading = false;\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                _context2.next = 10;\n                return opt.enableSyn();\n\n              case 10:\n                _ = _context2.sent;\n                this.enabled = false;\n                this.loading = false;\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function enableMint() {\n        return _enableMint.apply(this, arguments);\n      }\n\n      return enableMint;\n    }(),\n    mint: function () {\n      var _mint = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var enabled, tokenAmount, validMint, mintResult;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return opt.isSynEnabled();\n\n              case 2:\n                enabled = _context3.sent;\n\n                if (enabled) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                this.enabled = false;\n                return _context3.abrupt(\"return\");\n\n              case 6:\n                this.loading = true;\n                tokenAmount = 0;\n                validMint = false;\n                _context3.prev = 9;\n                Decimal.set({\n                  toExpPos: 256\n                });\n                tokenAmount = new Decimal(this.synAmount);\n                validMint = tokenAmount.lte(new Decimal(this.allBalance.base));\n                _context3.next = 19;\n                break;\n\n              case 15:\n                _context3.prev = 15;\n                _context3.t0 = _context3[\"catch\"](9);\n                setTimeout(function (_) {\n                  _this2.$notification.open({\n                    message: 'Invalid Input!',\n                    description: \"Amount must be a number\",\n                    duration: 0\n                  });\n\n                  _this2.loading = false;\n                }, 400);\n                return _context3.abrupt(\"return\");\n\n              case 19:\n                if (validMint) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                setTimeout(function (_) {\n                  _this2.$notification.open({\n                    message: 'Invalid Mint!',\n                    description: _this2.$i18n.t(\"token.name\") + \" insufficient\",\n                    duration: 0\n                  });\n\n                  _this2.loading = false;\n                }, 400);\n                return _context3.abrupt(\"return\");\n\n              case 22:\n                _context3.next = 24;\n                return opt.mintSyn(tokenAmount.toString());\n\n              case 24:\n                mintResult = _context3.sent;\n\n                if (mintResult !== null) {\n                  console.log(\"mint transaction send success, tx hash is: \", mintResult);\n                } else {//user cancel or other unknown things happened, do nothing\n                }\n\n                this.loading = false;\n\n                if (typeof this.hideMint === \"function\") {\n                  this.hideMint();\n                }\n\n              case 28:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[9, 15]]);\n      }));\n\n      function mint() {\n        return _mint.apply(this, arguments);\n      }\n\n      return mint;\n    }()\n  }\n};",{"version":3,"sources":["Mint.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"row text-center mint-div\">\n    <div class=\"col\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <img class=\"mint-logo\" :src=\"'/static/like-to-do/mint.png'\" :alt=\"$t('token.name')\"/>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <p class=\"mint-tit\">{{ $t(\"action.mint\") }}</p>\n          <p class=\"mint-txt\">{{ $t(\"dashboard.mint.txt\") }}</p>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <p class=\"mint-input-tit\">{{ $t(\"dashboard.mint.confirm\") }}</p>\n          <input type=\"text\" v-model=\"synAmount\" placeholder=\"0.00\" class=\"mint-input\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-6 text-left notes-txt\">\n          {{ $t(\"dashboard.mint.staking\") }} {{willLock}} {{ $t(\"token.name\") }}\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <input v-show=\"enabled\" type=\"submit\" class=\"btn btn-info btn-mint-now\" value=\"Mint Now\"\n                 @click=\"mint\"\n          >\n          <input v-show=\"!enabled\" type=\"submit\" class=\"btn btn-info btn-mint-now\" :value=\"$t('action.enable')\"\n                 @click=\"enableMint\"\n          >\n        </div>\n      </div>\n    </div>\n\n    <loading :active.sync=\"loading\"\n             :can-cancel=\"false\"\n             :is-full-page=\"true\"></loading>\n  </div>\n</template>\n\n<script>\nimport chainOpt from \"../../../utils/web3/chainOperation\";\nimport $ from \"jquery\";\nimport Decimal from \"decimal.js\";\nimport * as constant from \"@/utils/web3/constant\"\n\n// Import component\nimport Loading from 'vue-loading-overlay';\n// Import stylesheet\nimport 'vue-loading-overlay/dist/vue-loading.css';\n\nlet opt = chainOpt.opt\nexport default {\n  name: \"mint\",\n  components:{\n    Loading\n  },\n\n  props: [\"hideMint\", \"allBalance\"],\n  data() {\n    return {\n      synAmount: \"0\",\n      enabled: false,\n      willLock: \"0\",\n      loading: false,\n    }\n  },\n\n  watch: {\n    enabled() {\n      if(this.enabled) {\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").show()\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").removeAttr(\"disabled\")\n      } else {\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").hide()\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").attr(\"disabled\", \"disabled\")\n      }\n    },\n\n    synAmount() {\n      this.willLock = this.synAmount\n    }\n  },\n\n  mounted() {\n    setTimeout(async _=>{\n      this.enabled = await opt.isSynEnabled().catch(e=>{return false})\n      if(!this.enabled) {\n        this.$nextTick(_=>{\n          $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").hide()\n          $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").attr(\"disabled\", \"disabled\")\n        })\n      }\n    }, 500)\n  },\n\n  methods: {\n    async enableMint() {\n      this.loading = true\n      let enabled = await opt.isSynEnabled()\n      if(enabled) {\n        this.enabled = true\n        this.loading = false\n        return\n      }\n\n      let _ = await opt.enableSyn()\n      this.enabled = false\n      this.loading = false\n    },\n\n    async mint() {\n      let enabled = await opt.isSynEnabled()\n      if(!enabled) {\n        this.enabled = false\n        return\n      }\n\n      this.loading = true\n      let tokenAmount = 0\n      let validMint = false\n      try {\n        Decimal.set({ toExpPos: 256 })\n        tokenAmount = new Decimal(this.synAmount)\n        validMint = tokenAmount.lte(new Decimal(this.allBalance.base))\n      } catch (e) {\n        setTimeout(_=>{\n          this.$notification.open({\n            message: 'Invalid Input!',\n            description: \"Amount must be a number\",\n            duration: 0,\n          });\n          this.loading = false\n        }, 400)\n\n        return\n      }\n\n      if(!validMint) {\n        setTimeout(_=>{\n          this.$notification.open({\n            message: 'Invalid Mint!',\n            description: this.$i18n.t(\"token.name\") + \" insufficient\",\n            duration: 0,\n          });\n          this.loading = false\n        }, 400)\n\n        return\n      }\n\n      let mintResult = await opt.mintSyn(tokenAmount.toString())\n\n      if(mintResult !== null){\n        console.log(\"mint transaction send success, tx hash is: \", mintResult)\n      } else {\n        //user cancel or other unknown things happened, do nothing\n      }\n\n      this.loading = false\n      if(typeof this.hideMint === \"function\") {\n        this.hideMint()\n      }\n    },\n  },\n}\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n@import \"../../../styles/colors.scss\";\n@import \"../../../styles/fonts.scss\";\n\n.mint-div {\n  flex: 1 1 0;\n  padding: 24px 0;\n\n  .mint-logo {\n    width: 180px;\n    height: 180px;\n  }\n\n  .mint-tit {\n    font-family: $fontTit;\n    font-size: 32px;\n    letter-spacing: 2px;\n    margin: 42px 0 12px;\n  }\n  .mint-txt,\n  .mint-input-tit {\n    font-family: $fontTxt;\n    font-size: 16px;\n    color: $txtColor;\n    font-weight: 400;\n  }\n  .mint-input-tit {\n    font-family: $fontTit;\n    margin-top: 48px;\n  }\n  .mint-input {\n    color: $fontColor;\n    background-color: $bg;\n    font-family: $fontTxt;\n    width: 100%;\n    height: 54px;\n    font-size: 24px;\n    padding: 16px;\n    border-width: 1px;\n    border-style: solid;\n    border-color: $divBorderColor;\n    border-image: initial;\n    border-radius: 20px;\n    outline: none;\n    margin-bottom: 12px;\n  }\n\n  .notes-txt {\n    color: $notesColor;\n    font-family: $fontTxt;\n    font-size: 10px;\n    line-height: 18px;\n    letter-spacing: 0.5px;\n    font-weight: 400;\n  }\n\n  .btn-mint-now {\n    color: $btnFontColor;\n    background-color: $btnBg;\n    font-family: $fontTit;\n    width: 100%;\n    height: 72px;\n    text-transform: uppercase;\n    cursor: pointer;\n    border-width: 1px;\n    border-style: solid;\n    border-color: $divBorderColor;\n    border-image: initial;\n    border-radius: 5px;\n    transition: all 0.1s ease-in 0s;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/dashboard/actions"}]}