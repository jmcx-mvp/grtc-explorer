{"remainingRequest":"/Users/lyx/WebstormProjects/avg-geyser/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyx/WebstormProjects/avg-geyser/src/views/dashboard/actions/Mint.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lyx/WebstormProjects/avg-geyser/src/views/dashboard/actions/Mint.vue","mtime":1599645606000},{"path":"/Users/lyx/WebstormProjects/avg-geyser/node_modules/cache-loader/dist/cjs.js","mtime":1599786627641},{"path":"/Users/lyx/WebstormProjects/avg-geyser/node_modules/babel-loader/lib/index.js","mtime":1599578972213},{"path":"/Users/lyx/WebstormProjects/avg-geyser/node_modules/cache-loader/dist/cjs.js","mtime":1599786627641},{"path":"/Users/lyx/WebstormProjects/avg-geyser/node_modules/vue-loader/lib/index.js","mtime":1599786628079}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport chainOpt from \"../../../utils/web3/chainOperation\";\nimport $ from \"jquery\";\nimport Decimal from \"decimal.js\";\nimport * as constant from \"@/utils/web3/constant\"\n\n// Import component\nimport Loading from 'vue-loading-overlay';\n// Import stylesheet\nimport 'vue-loading-overlay/dist/vue-loading.css';\n\nlet opt = chainOpt.opt\nexport default {\n  name: \"mint\",\n  components:{\n    Loading\n  },\n\n  props: [\"hideMint\", \"allBalance\"],\n  data() {\n    return {\n      synAmount: \"0\",\n      enabled: false,\n      willLock: \"0\",\n      loading: false,\n    }\n  },\n\n  watch: {\n    enabled() {\n      if(this.enabled) {\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").show()\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").removeAttr(\"disabled\")\n      } else {\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").hide()\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").attr(\"disabled\", \"disabled\")\n      }\n    },\n\n    synAmount() {\n      this.willLock = this.synAmount\n    }\n  },\n\n  mounted() {\n    setTimeout(async _=>{\n      this.enabled = await opt.isSynEnabled().catch(e=>{return false})\n      if(!this.enabled) {\n        this.$nextTick(_=>{\n          $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").hide()\n          $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").attr(\"disabled\", \"disabled\")\n        })\n      }\n    }, 500)\n  },\n\n  methods: {\n    async enableMint() {\n      this.loading = true\n      let enabled = await opt.isSynEnabled()\n      if(enabled) {\n        this.enabled = true\n        this.loading = false\n        return\n      }\n\n      let _ = await opt.enableSyn()\n      this.enabled = false\n      this.loading = false\n    },\n\n    async mint() {\n      let enabled = await opt.isSynEnabled()\n      if(!enabled) {\n        this.enabled = false\n        return\n      }\n\n      this.loading = true\n      let tokenAmount = 0\n      let validMint = false\n      try {\n        Decimal.set({ toExpPos: 256 })\n        tokenAmount = new Decimal(this.synAmount)\n        validMint = tokenAmount.lte(new Decimal(this.allBalance.base))\n      } catch (e) {\n        setTimeout(_=>{\n          this.$notification.open({\n            message: 'Invalid Input!',\n            description: \"Amount must be a number\",\n            duration: 0,\n          });\n          this.loading = false\n        }, 400)\n\n        return\n      }\n\n      if(!validMint) {\n        setTimeout(_=>{\n          this.$notification.open({\n            message: 'Invalid Mint!',\n            description: this.$i18n.t(\"token.name\") + \" insufficient\",\n            duration: 0,\n          });\n          this.loading = false\n        }, 400)\n\n        return\n      }\n\n      let mintResult = await opt.mintSyn(tokenAmount.toString())\n\n      if(mintResult !== null){\n        console.log(\"mint transaction send success, tx hash is: \", mintResult)\n      } else {\n        //user cancel or other unknown things happened, do nothing\n      }\n\n      this.loading = false\n      if(typeof this.hideMint === \"function\") {\n        this.hideMint()\n      }\n    },\n  },\n}\n",{"version":3,"sources":["Mint.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Mint.vue","sourceRoot":"src/views/dashboard/actions","sourcesContent":["<template>\n  <div class=\"row text-center mint-div\">\n    <div class=\"col\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <img class=\"mint-logo\" :src=\"'/static/like-to-do/mint.png'\" :alt=\"$t('token.name')\"/>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <p class=\"mint-tit\">{{ $t(\"action.mint\") }}</p>\n          <p class=\"mint-txt\">{{ $t(\"dashboard.mint.txt\") }}</p>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <p class=\"mint-input-tit\">{{ $t(\"dashboard.mint.confirm\") }}</p>\n          <input type=\"text\" v-model=\"synAmount\" placeholder=\"0.00\" class=\"mint-input\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-6 text-left notes-txt\">\n          {{ $t(\"dashboard.mint.staking\") }} {{willLock}} {{ $t(\"token.name\") }}\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <input v-show=\"enabled\" type=\"submit\" class=\"btn btn-info btn-mint-now\" value=\"Mint Now\"\n                 @click=\"mint\"\n          >\n          <input v-show=\"!enabled\" type=\"submit\" class=\"btn btn-info btn-mint-now\" :value=\"$t('action.enable')\"\n                 @click=\"enableMint\"\n          >\n        </div>\n      </div>\n    </div>\n\n    <loading :active.sync=\"loading\"\n             :can-cancel=\"false\"\n             :is-full-page=\"true\"></loading>\n  </div>\n</template>\n\n<script>\nimport chainOpt from \"../../../utils/web3/chainOperation\";\nimport $ from \"jquery\";\nimport Decimal from \"decimal.js\";\nimport * as constant from \"@/utils/web3/constant\"\n\n// Import component\nimport Loading from 'vue-loading-overlay';\n// Import stylesheet\nimport 'vue-loading-overlay/dist/vue-loading.css';\n\nlet opt = chainOpt.opt\nexport default {\n  name: \"mint\",\n  components:{\n    Loading\n  },\n\n  props: [\"hideMint\", \"allBalance\"],\n  data() {\n    return {\n      synAmount: \"0\",\n      enabled: false,\n      willLock: \"0\",\n      loading: false,\n    }\n  },\n\n  watch: {\n    enabled() {\n      if(this.enabled) {\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").show()\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").removeAttr(\"disabled\")\n      } else {\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").hide()\n        $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").attr(\"disabled\", \"disabled\")\n      }\n    },\n\n    synAmount() {\n      this.willLock = this.synAmount\n    }\n  },\n\n  mounted() {\n    setTimeout(async _=>{\n      this.enabled = await opt.isSynEnabled().catch(e=>{return false})\n      if(!this.enabled) {\n        this.$nextTick(_=>{\n          $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").hide()\n          $(this.$el).find(\".mint-input, .mint-input-tit, .notes-txt\").attr(\"disabled\", \"disabled\")\n        })\n      }\n    }, 500)\n  },\n\n  methods: {\n    async enableMint() {\n      this.loading = true\n      let enabled = await opt.isSynEnabled()\n      if(enabled) {\n        this.enabled = true\n        this.loading = false\n        return\n      }\n\n      let _ = await opt.enableSyn()\n      this.enabled = false\n      this.loading = false\n    },\n\n    async mint() {\n      let enabled = await opt.isSynEnabled()\n      if(!enabled) {\n        this.enabled = false\n        return\n      }\n\n      this.loading = true\n      let tokenAmount = 0\n      let validMint = false\n      try {\n        Decimal.set({ toExpPos: 256 })\n        tokenAmount = new Decimal(this.synAmount)\n        validMint = tokenAmount.lte(new Decimal(this.allBalance.base))\n      } catch (e) {\n        setTimeout(_=>{\n          this.$notification.open({\n            message: 'Invalid Input!',\n            description: \"Amount must be a number\",\n            duration: 0,\n          });\n          this.loading = false\n        }, 400)\n\n        return\n      }\n\n      if(!validMint) {\n        setTimeout(_=>{\n          this.$notification.open({\n            message: 'Invalid Mint!',\n            description: this.$i18n.t(\"token.name\") + \" insufficient\",\n            duration: 0,\n          });\n          this.loading = false\n        }, 400)\n\n        return\n      }\n\n      let mintResult = await opt.mintSyn(tokenAmount.toString())\n\n      if(mintResult !== null){\n        console.log(\"mint transaction send success, tx hash is: \", mintResult)\n      } else {\n        //user cancel or other unknown things happened, do nothing\n      }\n\n      this.loading = false\n      if(typeof this.hideMint === \"function\") {\n        this.hideMint()\n      }\n    },\n  },\n}\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n@import \"../../../styles/colors.scss\";\n@import \"../../../styles/fonts.scss\";\n\n.mint-div {\n  flex: 1 1 0;\n  padding: 24px 0;\n\n  .mint-logo {\n    width: 180px;\n    height: 180px;\n  }\n\n  .mint-tit {\n    font-family: $fontTit;\n    font-size: 32px;\n    letter-spacing: 2px;\n    margin: 42px 0 12px;\n  }\n  .mint-txt,\n  .mint-input-tit {\n    font-family: $fontTxt;\n    font-size: 16px;\n    color: $txtColor;\n    font-weight: 400;\n  }\n  .mint-input-tit {\n    font-family: $fontTit;\n    margin-top: 48px;\n  }\n  .mint-input {\n    color: $fontColor;\n    background-color: $bg;\n    font-family: $fontTxt;\n    width: 100%;\n    height: 54px;\n    font-size: 24px;\n    padding: 16px;\n    border-width: 1px;\n    border-style: solid;\n    border-color: $divBorderColor;\n    border-image: initial;\n    border-radius: 20px;\n    outline: none;\n    margin-bottom: 12px;\n  }\n\n  .notes-txt {\n    color: $notesColor;\n    font-family: $fontTxt;\n    font-size: 10px;\n    line-height: 18px;\n    letter-spacing: 0.5px;\n    font-weight: 400;\n  }\n\n  .btn-mint-now {\n    color: $btnFontColor;\n    background-color: $btnBg;\n    font-family: $fontTit;\n    width: 100%;\n    height: 72px;\n    text-transform: uppercase;\n    cursor: pointer;\n    border-width: 1px;\n    border-style: solid;\n    border-color: $divBorderColor;\n    border-image: initial;\n    border-radius: 5px;\n    transition: all 0.1s ease-in 0s;\n  }\n}\n</style>\n"]}]}